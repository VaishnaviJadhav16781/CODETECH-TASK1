from datetime import datetime, timedelta

# Base class for Library Items
class LibraryItem:
    def __init__(self, title, author, category):
        self.title = title
        self.author = author
        self.category = category
        self.is_checked_out = False
        self.due_date = None

    def check_out(self):
        if not self.is_checked_out:
            self.is_checked_out = True
            self.due_date = datetime.now() + timedelta(days=14)  # Two weeks from now
            return f"'{self.title}' is checked out. Due date: {self.due_date.strftime('%Y-%m-%d')}."
        else:
            return f"'{self.title}' is already checked out."

    def return_item(self):
        if self.is_checked_out:
            self.is_checked_out = False
            overdue_days = (datetime.now() - self.due_date).days
            fine = max(0, overdue_days * 1)  # Fine: $1 per overdue day
            self.due_date = None
            return f"'{self.title}' returned. Overdue fine: ${fine}." if fine > 0 else f"'{self.title}' returned. No fine."
        else:
            return f"'{self.title}' is not checked out."

    def __str__(self):
        status = "Available" if not self.is_checked_out else f"Checked out, due {self.due_date.strftime('%Y-%m-%d')}"
        return f"{self.category}: '{self.title}' by {self.author} [{status}]"


# Subclasses for specific items (Books, Magazines, DVDs)
class Book(LibraryItem):
    def __init__(self, title, author):
        super().__init__(title, author, 'Book')


class Magazine(LibraryItem):
    def __init__(self, title, author):
        super().__init__(title, author, 'Magazine')


class DVD(LibraryItem):
    def __init__(self, title, author):
        super().__init__(title, author, 'DVD')


# Library class to manage all items
class Library:
    def __init__(self):
        self.items = []

    def add_item(self, item):
        self.items.append(item)
        return f"'{item.title}' added to the library."

    def search_items(self, keyword, search_by='title'):
        results = []
        keyword = keyword.lower()
        for item in self.items:
            if search_by == 'title' and keyword in item.title.lower():
                results.append(item)
            elif search_by == 'author' and keyword in item.author.lower():
                results.append(item)
            elif search_by == 'category' and keyword == item.category.lower():
                results.append(item)
        return results

    def check_out_item(self, title):
        for item in self.items:
            if item.title.lower() == title.lower():
                return item.check_out()
        return f"Item '{title}' not found."

    def return_item(self, title):
        for item in self.items:
            if item.title.lower() == title.lower():
                return item.return_item()
        return f"Item '{title}' not found."

    def display_items(self):
        for item in self.items:
            print(item)


# Main program for interaction
def main():
    library = Library()

    while True:
        print("\nLibrary Management System")
        print("1. Add new item")
        print("2. Search for an item")
        print("3. Check out an item")
        print("4. Return an item")
        print("5. Display all items")
        print("6. Exit")

        choice = input("\nEnter your choice (1-6): ")

        if choice == '1':
            item_type = input("Enter the type of item (Book/Magazine/DVD): ").strip().lower()
            title = input("Enter the title: ").strip()
            author = input("Enter the author: ").strip()
            
            if item_type == 'book':
                library.add_item(Book(title, author))
            elif item_type == 'magazine':
                library.add_item(Magazine(title, author))
            elif item_type == 'dvd':
                library.add_item(DVD(title, author))
            else:
                print("Invalid item type.")
            print(f"'{title}' added to the library.")

        elif choice == '2':
            search_by = input("Search by (title/author/category): ").strip().lower()
            keyword = input("Enter the search keyword: ").strip()
            results = library.search_items(keyword, search_by)
            if results:
                print("\nSearch Results:")
                for item in results:
                    print(item)
            else:
                print("No items found.")

        elif choice == '3':
            title = input("Enter the title of the item to check out: ").strip()
            print(library.check_out_item(title))

        elif choice == '4':
            title = input("Enter the title of the item to return: ").strip()
            print(library.return_item(title))

        elif choice == '5':
            print("\nLibrary Items:")
            library.display_items()

        elif choice == '6':
            print("Exiting the system.")
            break

        else:
            print("Invalid choice. Please choose a valid option.")


# Run the main program
if __name__ == "__main__":
    main()
